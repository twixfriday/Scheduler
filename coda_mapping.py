# -*- coding: utf-8 -*-
"""coda_mapping.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y7oIZ8saSz6Y-8C-CGmBOKrVCYlJXSYT
"""

!pip install codaio

import os
os.environ["CODA_API_KEY"] = "48d23695-6f3a-4822-8bb7-5b66d230cc58"

from codaio import Document
import pandas as pd
doc_id = "FNKNx-WCXR"
doc = Document.from_environment(doc_id)

table = doc.get_table("grid-0BRlKYNNB-")  # or table_id

for col in table.columns():
    print(f"Name: {col.name} | ID: {col.id}")

# Then upload table data to DataFrame
df = pd.DataFrame(table.to_dict())
print(df.head())

df = df[df['Duplicate'] == False]

df['Duplicate'].unique()

df_report = df[["Telegram Manager Nickname",
                "Raw Artist Name",
                "Raw Track Title",
                "Spotify Artist Name",
                "Spotify Track Title",
                "Permanent Video Link",
                "Profile Name",
                "Promo Date",
                "Promo Link",
                "Rate",
                "Views",
                "Likes",
                "Comments",
                "Shares",
                "Parsing Date",
                "Duplicate"]]

df_report['Parsing Date'] = pd.to_datetime(df_report['Parsing Date'])
df_report['Parsing Date'] = df_report['Parsing Date'].dt.strftime('%d.%m.%Y')
df_report['Promo Date'] = pd.to_datetime(df_report['Promo Date'])
df_report['Promo Date'] = df_report['Promo Date'].dt.strftime('%d.%m.%Y')

df_report

import gspread
from google.colab import auth
auth.authenticate_user()

import google.auth
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
from gspread_dataframe import set_with_dataframe


creds, _ = google.auth.default()

gc = gspread.authorize(creds)

spreadsheet_url = 'https://docs.google.com/spreadsheets/d/1O-fYK3CywWpZ__YDVx6119Rw9Pe4NHaBob13MXBAVlk/edit?pli=1&gid=117213402'
sh = gc.open_by_url(spreadsheet_url)

worksheet = sh.get_worksheet(0)

set_with_dataframe(worksheet, df_report)